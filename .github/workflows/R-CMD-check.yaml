# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches:
      - main
      - mm/make_tests_ci_work_ubuntu
  pull_request:
    branches:
      - main
      - mm/make_tests_ci_work_ubuntu



name: R-CMD-check.yaml

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      CI: "true"
      JULIA_DEPOT_PATH: /tmp/julia-depot
      JULIA_NUM_THREADS: "1"

    steps:
      - uses: actions/checkout@v4

      - name: Prepare Julia depot
        run: mkdir -p /tmp/julia-depot

      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: '1.10.8'

      - uses: r-lib/actions/setup-pandoc@v2

      # This step should come before  need R_HOME for Julia
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Set R_HOME for Julia
        shell: bash
        run: |
          # Get R_HOME after setup-r has configured R
          R_HOME_PATH=$(Rscript -e 'cat(R.home())')
          echo "Determined R_HOME_PATH: $R_HOME_PATH"
          # Export R_HOME for subsequent steps
          echo "R_HOME=$R_HOME_PATH" >> $GITHUB_ENV
          echo "R_HOME environment variable set."

      - name: Configure Julia packages
        shell: bash
        run: |
          # R_HOME is now available as a persistent environment variable for this step
          echo "Using R_HOME for Julia: $R_HOME"
          # Install all packages except RCall first
          julia -e 'import Pkg; Pkg.add(["Suppressor", "Serialization", "LogDensityProblemsAD", "ReverseDiff", "AdvancedHMC", "AbstractMCMC", "LogDensityProblems", "MCMCChains", "DataFrames"]); Pkg.add("JuliaBUGS")'
          # Install RCall but don't load it - let JuliaCall handle the initialization
          julia -e 'ENV["R_HOME"] = ENV["R_HOME"]; import Pkg; Pkg.add("RCall"); Pkg.build("RCall")'

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::devtools
          needs: check

      - name: Remove vignettes folder
        run: Rscript -e "if (dir.exists('vignettes')) unlink('vignettes', recursive=TRUE)"

      - name: Install package
        run: Rscript -e 'devtools::install(build_vignettes = FALSE, upgrade = "never")'

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--no-build-vignettes")'

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{setup_juliaBUGS}
\alias{setup_juliaBUGS}
\title{Setup Julia Environment for JuliaBUGS}
\usage{
setup_juliaBUGS(
  extra_packages = NULL,
  verify_package = TRUE,
  install_from_dev = FALSE,
  ...
)
}
\arguments{
\item{extra_packages}{A character vector of additional Julia packages to install and load.
Default is `NULL`, which means only the core packages needed for JuliaBUGS will be handled.}

\item{verify_package}{Logical. Whether to verify that the Julia packages were installed correctly.}

\item{install_from_dev}{Logical. Whether to install development versions of Julia packages.}

\item{...}{Additional arguments passed to `JuliaCall::julia_setup()`, such as `installJulia = TRUE`.}
}
\value{
This function is called for its side effects (installing and loading Julia packages). It returns `NULL` invisibly.
}
\description{
Installs and loads required Julia packages for using JuliaBUGS with R via JuliaCall.
}
\details{
This function checks for the required Julia packages for running `JuliaBUGS` and installs them if they are not already installed.
It also loads these packages into the current Julia session. Optionally, users can provide additional Julia packages to install and load.


The function uses `JuliaCall::julia_install_package_if_needed()` to install core Julia packages:
\item{LogDensityProblemsAD}{}
\item{ReverseDiff}{}
\item{AdvancedHMC}{}
\item{AbstractMCMC}{}
\item{LogDensityProblems}{}
\item{MCMCChains}{}
\item{JuliaBUGS}{}
After installation, these packages are loaded in the Julia session with the `using` statement.
Any additional packages specified in `extra_packages` will also be installed and loaded.
}
\examples{
\dontrun{
# Setup Julia with default required packages
setup_juliaBUGS()

# Setup Julia with additional packages
setup_juliaBUGS(extra_packages = c("Distributions", "Turing"))
}

}
\seealso{
[JuliaCall::julia_install_package_if_needed()], [JuliaCall::julia_eval()]
}
